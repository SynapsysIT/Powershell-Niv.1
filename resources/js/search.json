[[{"l":"Introduction"},{"i":"quest-ce-que-powershell-","l":"Qu'est ce que Powershell ?","p":["Powershell est avant tout un shell, c’est-à-dire une interface utilisateur permettant de traduire les commandes utilisateurs en exécution au niveau du système."]},{"i":"pourquoi-se-former-à-powershell-","l":"Pourquoi se former à Powershell ?","p":["Intéropérable avec l'ensemble de l'écosystème Microsoft, des APIs tierce, etc...","Productivité: Une action manuelle sur un élément prendra plus de temps que cette même action sur 1000 éléments en Powershell.","Standardisation: Une fois le code établi, son action sera toujours la même, sans oublis ou mauvaise manipulation"]}],[{"l":"Exécuter des commandes"},{"l":"Syntaxe des commandes","p":["Syntax Toutes les commandes PowerShell, appelés CmdLets se composent d’un verbe et d’un nom séparé par un tiret. Le résultat de la commande peut être influencer par l'ajout de paramètres.","Par exemple, la commande #!powershell Get-Service exécutée telle quelle, renverra l'ensemble des services.","Tandis que la commande #!powershell Get-Service -Name *Net* ne renverra que les services contenant net dans leur nom.","Chaque verbe correspond à un type d'action précis :","Verb","Action","GET",":material-arrow-right: Requeter","SET",":material-arrow-right:Configurer / Définir","IMPORT",":material-arrow-right:Importer","etc ...","...","permet d'obtenir la liste des verbs approuvés par les best-practices Powershell"]},{"l":"Les 3 commandes indispensables"},{"l":"Get-Command","p":["#!powershell Get-Command permet de rechercher une commande en fonction de nom, de son verb ou de son module d'appartenance."]},{"l":"Get-Help","p":["La commande #!powershell Get-Help permet d'obtenir une aide sur le fonctionnement d'une commande.","Elle vous permet d'identifier les paramètres attendues, lesquels sont obligatoires ou non, le type de valeurs à leur envoyer, etc ...","#!powershell Get-Help vous permet d'obtenir \"la carte d'identité\" d'un objet obtenu par l'éxécution d'une commande ou stocké dans une variable. Elle vous permettra de connaitre:","Son type","Ses propriétés","Ses méthodes","Verb","Description","#!powershell Get-Command",":material-arrow-right: Lister et chercher des commandes","#!powershell Get-Help",":material-arrow-right: Obtenir l'aide d'une commande","#!powershell Get-Member",":material-arrow-right: Connaitre le type, les propriétés et les méthodes d’un objet"]}],[{"i":"pipeline--objets","l":"Pipeline & Objets"},{"l":"Language Objet","p":["Contrairement à Batch ou Bash qui sont des langages dit « textes », Powershell est un langage objet.","Sous PowerShell, chaque commande renverra un objet d’un type précis possédant ses propriétés et ses méthodes."]},{"l":"Le Pipeline","p":["Le pipeline, symbolisée par le caractère |( altgr+6) permet de chainer plusieurs commandes entre elles.","Autrement dit, la sortie d'une commande correspond à l' entrée de la suivante.","Les valeurs des paramètres de la deuxième commande lui sont fourni par la première commande."]}],[{"l":"Les variables","p":["La variable est un emplacement mémoire. Elle se compose de 3 éléments :","Un nom","Un type","Une valeur","Sous PowerShell, une variable est précédée du signe :","Le contenu d'une variable peut être une valeur unique, ou une collection d'objets"]},{"l":"Assignation de variables","p":["L'assignation d'une variable se fait avec le symbole","Le résultat d'une commande peut être stocké dans une variable de la même manière","Powershell détermine le type de la variable en fonction de la syntaxe avec laquelle elle est définie"]},{"l":"Forcer le typage","p":["Il peut être néccéssaire d'avoir à forcer le type d'une variable. Pour cela on précise le type voulu entre [ ] avant le nom de la variable."]},{"l":"Propriétés et méthodes","p":["Les propriétés et les méthodes de l'objet stocké en variable pourront être appelé par un ."]},{"l":"Utilisation dans une commande","p":["Une variable ou seulement ses propriétés pourront être utilisés dans une commande"]}],[{"l":"Array","p":["Une array est une liste de valeur"]},{"l":"Indexage dans une liste"}],[{"l":"Hashtable","p":["Une Hashtable est un tableau de correspondance clé/valeur","Les valeurs peuvent alors être appelés en utilisant leur clé","Ou comme pour appelé la propriété d'un objet"]}],[{"l":"PSCustomObject","p":["Le PSCustomObject permet la création d'un objet personnalisé dans lequel on pourra définire l'ensemble de ses propriétés","Il est possible de compléter l'objet via l'utilisation de la commande Add-Member","Add-Member","Les propriétés peuvent alors être appelés comme n'importe quel autre objet"]}]]